{"version":3,"sources":["Component/Navbar.js","Component/TextForm.js","Component/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","style","color","heading","value","onChange","event","target","background","rows","newText","toUpperCase","toLowerCase","split","i","length","charAt","slice","join","document","getElementById","select","navigator","clipboard","writeText","Alerts","alert","word","lower","capitalize","msg","App","setDarkMode","_useState3","_useState4","setAlert","showAlert","message","setTimeout","body","backgroundColor","onShowAlert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.793c769c.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n//import {Link} from \"react-router-dom\";\n//eslint-disable-next-line\nexport default function Navbar(props) {\n  return (<>\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n  <div className=\"container-fluid\">\n    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          {/* <Link  className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\n          <a  className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n        </li>\n        {/* <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\n        </li> */}\n        \n         \n      </ul>\n      {/*<form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-success\" type=\"submit\">Search</button>\n      </form>*/}\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n       { /*eslint-disable-next-line*/}\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode </label>\n      </div>\n    </div>\n  </div>\n</nav>\n  \n  \n  </>\n  )\n}; \nNavbar.propTypes={title:PropTypes.string, \n                   about:PropTypes.string} ","import React,  {useState} from 'react'\n\nexport default function TextForm(props) {\n    const handleUpclick=()=>{\n        // console.log(\"Uppercase was clicked\"+text);\n        let  newText=text.toUpperCase();\n        setText(newText);\n        //props.showAlert(\"Converted to Uppercase\",\"success\")\n    }\n    const handleOnChange=(event)=>{\n        //console.log(\"On change\");\n        setText(event.target.value);\n        \n    }\n    const handleTitleclick=()=>{\n        let  newText = text.toLowerCase().split(' ');\n        for (var i = 0; i < newText.length; i++) {\n            newText[i] = newText[i].charAt(0).toUpperCase() + newText[i].slice(1); \n        }\n        setText(newText.join(' '));\n        //props.showAlert(\"Converted to Titlecase\",\"success\")\n      \n    }\n    const handleClearclick=()=>{\n        \n        let  newText=('');\n        setText(newText);\n        //props.showAlert(\"Text Cleared\",\"success\")\n    }\n    const handleLoclick=()=>{\n        // console.log(\"Uppercase was clicked\"+text);\n        let  newText=text.toLowerCase();\n        setText(newText);\n           // props.showAlert(\"Converted to Lowercase\",\"success\")\n    }\n    function handlecopy() {\n\n        var text = document.getElementById(\"myBox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        //props.showAlert(\"Text Copied\", \"success\")\n    }\n\n    const[text,setText]=useState('');\n  return (\n    <>\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\n    <div>\n        <h2>{props.heading}</h2>\n           <div className=\"mb-3\">\n            \n             <textarea className=\"form-control\"  value={text} onChange={handleOnChange}  style={{background:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}}id=\"myBox\" rows=\"8\"></textarea>\n           </div>\n           <button className=\"btn btn-success mx-1\" onClick={handleUpclick}>Convert to Uppercase</button>\n           <button className=\"btn btn-success mx-1 \" onClick={handleLoclick}>Convert to Lowercase</button>\n           <button className=\"btn btn-success mx-1 \" onClick={handleTitleclick}>Convert to Titlecase</button>\n           \n           <button className=\"btn btn-success mx-1 \" onClick={handlecopy}>Copy Text</button>\n           <button className=\"btn btn-success mx-1 \" onClick={handleClearclick}>Clear Text</button>\n           \n    </div>\n    </div>\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\n    <h2>Your text summary</h2>\n    <p>{text.split(\" \").length} words and {text.length} characters</p>\n    <p>{0.008*text.split(\" \").length} Minutes required to Read.</p>\n    <h2 >Preview</h2>\n    <p>{text.length>0?text:\"Enter something for preview\"}</p>\n    </div>\n\n    </>\n     \n  )\n}\n","import React from 'react'\n\n\nfunction Alerts(props) {\n    const capitalize=(word)=>{  \n        const lower=word.toLowerCase();\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\n    }\n  return (\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n       <strong>{capitalize(props.alert.type)} </strong> : {props.alert.msg}\n  \n  \n</div>\n  )\n}\n\nexport default Alerts;\n","\nimport React from 'react';\n\nimport './App.css';\n//import About from './Component/About';\nimport Navbar from './Component/Navbar';\nimport TextForm from './Component/TextForm';\nimport {useState} from 'react';\nimport Alerts from './Component/Alerts';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n  \n// } from \"react-router-dom\";\n\n\n\n \n\nfunction App() \n{\n  const [mode, setDarkMode] = useState('light'); \n  const [alert, setAlert] = useState(null );\n   const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    }) \n  setTimeout(() => {\n    setAlert(null);\n  }, 1500);\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setDarkMode('dark');\n      document.body.style.backgroundColor='#999900 ';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title='WordCheck - Dark Mode';\n    }\n    else{   \n      setDarkMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n      document.title='WordCheck - Light Mode';\n    } \n    }\n\n  return (\n      <>\n    \n    {/* <Router> */}\n      <Navbar title=\"WordCheck\" mode={mode} toggleMode={toggleMode}/>\n      <Alerts alert = {alert}/>  \n      <div className=\"container my-3\">\n        {/* <Routes>   \n          <Route path=\"/about\" element={<About />} /> */}\n          {/* <Route path=\"/\" element={*/}\n            <TextForm heading=\"Enter the text to analyze below\" onShowAlert={showAlert}/>\n        {/* </Routes> */}\n      </div>\n       {/* </Router> */}\n    \n    </> \n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}